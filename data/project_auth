{
    "apiVersion": "1.0",
    "swaggerVersion": "1.2",
    "basePath": "http://portal.28.io",
    "resourcePath": "/api/session",
    "produces": ["application/json"],
    "apis": [
        {
            "path": "/api/session",
            "operations": [
                {
                    "method": "POST",
                    "summary": "Creates or refreshes a session",
                    "notes": "This OAuth2 compliant endpoint can be used both to start a new session or to refresh the current session. To start a new session the 'grant_type' parameter must be set to 'client_credentials' and the 'email' and 'password' parameters must be specified. To refresh an already started session the 'grant_type' parameter must be set to 'refresh_token' and the 'refresh_token' parameter must be specified. If a session is successfully started or refreshed a new API and a new refresh tokens are returned.",
                    "type": "Authentication",
                    "nickname": "authenticate",
                    "parameters": [
                        {
                            "name": "grant_type",
                            "description": "The grant_type. 'client_credentials' to start a new session, 'refresh_token' to refresh a session",
                            "required": true,
                            "type": "string",
                            "enum": ["client_credentials", "refresh_token"],
                            "paramType": "query"
                        },
                        {
                            "name": "email",
                            "description": "The account email. Mandatory for login requests.",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "password",
                            "description": "The account password. Mandatory for login requests.",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "refresh_token",
                            "description": "The session refresh_token obtained the last time this method has been called. Mandatory for refresh requests.",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 400,
                            "message": "Bad request: a parameter is missing or invalid.",
                            "responseModel": "Error"
                        },
                        {
                            "code": 403,
                            "message": "The specified password or refresh token is invalid.",
                            "responseModel": "Error"
                        },
                        {
                            "code": 409,
                            "message": "The specified user has not been confirmed.",
                            "responseModel": "Error"
                        },
                        {
                            "code": 404,
                            "message": "The specified account cannot be found.",
                            "responseModel": "Error"
                        },
                        {
                            "code": 500,
                            "message": "An internal error occurred during the processing of the request.",
                            "responseModel": "Error"
                        }
                    ]
                }
            ]
        }
    ],
    "models": {
        "Error": {
            "id": "Error",
            "description": "Error information",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The XQuery error code of the error"
                },
                "message": {
                    "type": "string",
                    "description": "A formatted string which contain the error code (always) and the module name, line and column-number and error description (when available)"
                },
                "description": {
                    "type": "string",
                    "description": "The error description"
                },
                "module": {
                    "type": "string",
                    "description": "The error module"
                },
                "line-number": {
                    "type": "string",
                    "description": "The error line number"
                },
                "column-number": {
                    "type": "string",
                    "description": "The error column number"
                }
            }
        },
        "Authentication": {
            "id": "Authentication",
            "description": "Authentication data",
            "required": [
                "token_type",
                "expiration_date",
                "access_token",
                "refresh_token",
                "project_tokens"
            ],
            "properties": {
                "token_type": {
                    "type": "string",
                    "description": "The API token type",
                    "enum": [
                        "bearer"
                    ]
                },
                "expiration_date": {
                    "type": "date-time",
                    "description": "The expiration date of all the tokens in the response"
                },
                "access_token": {
                    "type": "string",
                    "description": "The API token"
                },
                "refresh_token": {
                    "type": "string",
                    "description": "The refresh token which can be used to refresh both the API and project tokens"
                },
                "project_tokens": {
                    "type": "ProjectTokens",
                    "description": "The project tokens which can be used to make request to the APIs on the project endpoints"
                }
            }
        },
        "ProjectTokens": {
            "id": "ProjectTokens",
            "description": "An object containing zero or more project tokens. Each project token is stored in a different field project_{name}, where {name} is the project name, (e.g.: portal).",
            "properties": {
                "project_{name}": {
                    "type": "string",
                    "description": "The token for the project {name}. One field for each project owned by the account will be present"
                }
            }
        }
    }
}
